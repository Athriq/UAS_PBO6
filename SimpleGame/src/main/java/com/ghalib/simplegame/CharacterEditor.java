/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.ghalib.simplegame;

import java.util.ArrayList;
import java.awt.event.WindowEvent;

/**
 *
 * @author Ahmad Ghalib Athariq
 */
public class CharacterEditor extends javax.swing.JFrame {
    private Character character;
    
    private ArrayList<CharacterTrait> traitPresets;
    private ArrayList<Weapon> weaponPresets;
    private ArrayList<Armor> armorPresets;
    
    private boolean battleStarted;
    
    private final int maxPoints = 20;
    private int pointsLeft = 20;
    
    /**
     * Creates new form CharacterCreatorScreen
     * @param character
     */
    public CharacterEditor(Character character, ArrayList<CharacterTrait> traitPresets,
            ArrayList<Weapon> weaponPresets, ArrayList<Armor> armorPresets) {
        initComponents();
        this.character = character;
        updateStats();
        
        this.traitPresets = traitPresets;
        this.weaponPresets = weaponPresets;
        this.armorPresets = armorPresets;
        
        for (int i = 0; i < traitPresets.size(); i++) {
            traitComboBox.addItem(traitPresets.get(i).getTraitName());
        }
        
        for (int i = 0; i < weaponPresets.size(); i++) {
            weaponComboBox.addItem(weaponPresets.get(i).getWeaponName());
        }

        for (int i = 0; i < armorPresets.size(); i++) {
            armorComboBox.addItem(armorPresets.get(i).getArmorName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        charName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        traitComboBox = new javax.swing.JComboBox<>();
        weaponComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        armorComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        maxHpStat = new javax.swing.JLabel();
        damageStat = new javax.swing.JLabel();
        armorStat = new javax.swing.JLabel();
        intelligenceStat = new javax.swing.JLabel();
        battleButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        agilityStat = new javax.swing.JLabel();
        minusHp = new javax.swing.JButton();
        minusDamage = new javax.swing.JButton();
        minusArmor = new javax.swing.JButton();
        minusIntel = new javax.swing.JButton();
        minusAgility = new javax.swing.JButton();
        hpPlus = new javax.swing.JButton();
        plusDamage = new javax.swing.JButton();
        plusArmor = new javax.swing.JButton();
        plusIntel = new javax.swing.JButton();
        plusAgility = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        pointsText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Character Editor");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("charEditor"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        charName.setText("Sang Pahlawan");
        charName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                charNameKeyTyped(evt);
            }
        });

        jLabel1.setText("Nama Karakter:");

        jLabel3.setText("Sifat:");

        traitComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                traitComboBoxItemStateChanged(evt);
            }
        });

        weaponComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                weaponComboBoxItemStateChanged(evt);
            }
        });

        jLabel5.setText("Senjata:");

        armorComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                armorComboBoxItemStateChanged(evt);
            }
        });

        jLabel6.setText("Baju Pelindung:");

        jLabel4.setText("Stat Karakter");

        jLabel7.setText("Max HP:");

        jLabel8.setText("Damage:");

        jLabel9.setText("Armor:");

        jLabel10.setText("Intelligence:");

        maxHpStat.setText("...");

        damageStat.setText("...");

        armorStat.setText("...");

        intelligenceStat.setText("...");

        battleButton.setText("Battle");
        battleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                battleButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("Agility");

        agilityStat.setText("...");

        minusHp.setText("-");
        minusHp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusHpActionPerformed(evt);
            }
        });

        minusDamage.setText("-");
        minusDamage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusDamageActionPerformed(evt);
            }
        });

        minusArmor.setText("-");
        minusArmor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusArmorActionPerformed(evt);
            }
        });

        minusIntel.setText("-");
        minusIntel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusIntelActionPerformed(evt);
            }
        });

        minusAgility.setText("-");
        minusAgility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusAgilityActionPerformed(evt);
            }
        });

        hpPlus.setText("+");
        hpPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hpPlusActionPerformed(evt);
            }
        });

        plusDamage.setText("+");
        plusDamage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusDamageActionPerformed(evt);
            }
        });

        plusArmor.setText("+");
        plusArmor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusArmorActionPerformed(evt);
            }
        });

        plusIntel.setText("+");
        plusIntel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusIntelActionPerformed(evt);
            }
        });

        plusAgility.setText("+");
        plusAgility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusAgilityActionPerformed(evt);
            }
        });

        jLabel2.setText("Points");

        pointsText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pointsText.setText("0/0");
        pointsText.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(weaponComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(charName, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(traitComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(armorComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(armorStat, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(minusArmor))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(intelligenceStat, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(minusIntel))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(agilityStat, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(minusAgility))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                            .addComponent(maxHpStat, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(minusHp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                            .addComponent(damageStat, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(minusDamage))))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(plusArmor, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(plusIntel, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(plusAgility, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(hpPlus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(plusDamage, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(0, 45, Short.MAX_VALUE)
                                                        .addComponent(jLabel2))
                                                    .addComponent(pointsText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(battleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(charName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(traitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(weaponComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(armorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(maxHpStat)
                            .addComponent(minusHp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(damageStat)
                            .addComponent(minusDamage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(armorStat)
                            .addComponent(minusArmor))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(intelligenceStat)
                            .addComponent(minusIntel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(agilityStat)
                            .addComponent(minusAgility)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(hpPlus)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(plusDamage))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(pointsText)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plusArmor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plusIntel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(plusAgility)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(battleButton)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void battleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_battleButtonActionPerformed
        battleStarted = true;
        this.setVisible(false);
    }//GEN-LAST:event_battleButtonActionPerformed

    private void traitComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_traitComboBoxItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            for (int i = 0; i < traitPresets.size(); i++) {
                var trait = traitPresets.get(i);
                if (trait.getTraitName() == evt.getItem()) {
                    character.setTrait(trait);
                    break;
                }
            }
        }
        
        pointsLeft = maxPoints;
        updateStats();
    }//GEN-LAST:event_traitComboBoxItemStateChanged

    private void weaponComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_weaponComboBoxItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            for (int i = 0; i < weaponPresets.size(); i++) {
                var weapon = weaponPresets.get(i);
                if (weapon.getWeaponName() == evt.getItem()) {
                    character.setEquippedWeapon(weapon);
                    break;
                }
            }
        }
        
        pointsLeft = maxPoints;
        updateStats();
    }//GEN-LAST:event_weaponComboBoxItemStateChanged

    private void armorComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_armorComboBoxItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            for (int i = 0; i < armorPresets.size(); i++) {
                var armor = armorPresets.get(i);
                if (armor.getArmorName() == evt.getItem()) {
                    character.setEquippedArmor(armor);
                    break;
                }
            }
        }
        
        pointsLeft = maxPoints;
        updateStats();
    }//GEN-LAST:event_armorComboBoxItemStateChanged

    private void charNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_charNameKeyTyped
        character.setName(charName.getText());
    }//GEN-LAST:event_charNameKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        battleStarted = false;
    }//GEN-LAST:event_formWindowOpened

    private void hpPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hpPlusActionPerformed
        if (pointsLeft <= 0)
            return;
        var trait = character.getTrait();
        trait.setMaxHp(trait.getMaxHp() + 1);
        pointsLeft--;
        updateStats();
    }//GEN-LAST:event_hpPlusActionPerformed

    private void plusDamageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusDamageActionPerformed
        if (pointsLeft <= 0)
            return;
        var weapon = character.getEquippedWeapon();
        weapon.setDamage(weapon.getDamage() + 1);
        pointsLeft--;
        updateStats();
    }//GEN-LAST:event_plusDamageActionPerformed

    private void plusArmorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusArmorActionPerformed
        if (pointsLeft <= 0)
            return;
        var armor = character.getEquippedArmor();
        armor.setDefense(armor.getDefense() + 1);
        pointsLeft--;
        updateStats();
    }//GEN-LAST:event_plusArmorActionPerformed

    private void plusIntelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusIntelActionPerformed
        if (pointsLeft <= 0)
            return;
        var trait = character.getTrait();
        trait.setIntelligence(trait.getIntelligence() + 1);
        pointsLeft--;
        updateStats();
    }//GEN-LAST:event_plusIntelActionPerformed

    private void plusAgilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusAgilityActionPerformed
        if (pointsLeft <= 0)
            return;
        var trait = character.getTrait();
        trait.setAgility(trait.getAgility() + 1);
        pointsLeft--;
        updateStats();
    }//GEN-LAST:event_plusAgilityActionPerformed

    private void minusHpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusHpActionPerformed
        if (pointsLeft >= maxPoints || pointsLeft <= 0)
            return;
        var trait = character.getTrait();
        trait.setMaxHp(trait.getMaxHp() - 1);
        pointsLeft++;
        updateStats();
    }//GEN-LAST:event_minusHpActionPerformed

    private void minusDamageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusDamageActionPerformed
        if (pointsLeft >= maxPoints || pointsLeft <= 0)
            return;
        var weapon = character.getEquippedWeapon();
        weapon.setDamage(weapon.getDamage() - 1);
        pointsLeft++;
        updateStats();
    }//GEN-LAST:event_minusDamageActionPerformed

    private void minusArmorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusArmorActionPerformed
        if (pointsLeft >= maxPoints || pointsLeft <= 0)
            return;
        var armor = character.getEquippedArmor();
        armor.setDefense(armor.getDefense() - 1);
        pointsLeft++;
        updateStats();
    }//GEN-LAST:event_minusArmorActionPerformed

    private void minusIntelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusIntelActionPerformed
        if (pointsLeft >= maxPoints || pointsLeft <= 0)
            return;
        var trait = character.getTrait();
        trait.setIntelligence(trait.getIntelligence() - 1);
        pointsLeft++;
        updateStats();
    }//GEN-LAST:event_minusIntelActionPerformed

    private void minusAgilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusAgilityActionPerformed
        if (pointsLeft >= maxPoints || pointsLeft <= 0)
            return;
        var trait = character.getTrait();
        trait.setAgility(trait.getAgility() - 1);
        pointsLeft++;
        updateStats();
    }//GEN-LAST:event_minusAgilityActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel agilityStat;
    private javax.swing.JComboBox<String> armorComboBox;
    private javax.swing.JLabel armorStat;
    private javax.swing.JButton battleButton;
    private javax.swing.JTextField charName;
    private javax.swing.JLabel damageStat;
    private javax.swing.JButton hpPlus;
    private javax.swing.JLabel intelligenceStat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel maxHpStat;
    private javax.swing.JButton minusAgility;
    private javax.swing.JButton minusArmor;
    private javax.swing.JButton minusDamage;
    private javax.swing.JButton minusHp;
    private javax.swing.JButton minusIntel;
    private javax.swing.JButton plusAgility;
    private javax.swing.JButton plusArmor;
    private javax.swing.JButton plusDamage;
    private javax.swing.JButton plusIntel;
    private javax.swing.JLabel pointsText;
    private javax.swing.JComboBox<String> traitComboBox;
    private javax.swing.JComboBox<String> weaponComboBox;
    // End of variables declaration//GEN-END:variables
    
    /**
     * @return the battleStarted
     */
    public boolean isBattleStarted() {
        return battleStarted;
    }
    
    private void updateStats()
    {
        maxHpStat.setText(Integer.toString(character.getTrait().getMaxHp()));
        damageStat.setText(Integer.toString(character.getEquippedWeapon().getDamage()));
        armorStat.setText(Integer.toString(character.getEquippedArmor().getDefense()));
        intelligenceStat.setText(Integer.toString(character.getTrait().getIntelligence()));
        agilityStat.setText(Integer.toString(character.getTrait().getAgility()));
        pointsText.setText(Integer.toString(pointsLeft) + "/" + Integer.toString(maxPoints));
    }
}
